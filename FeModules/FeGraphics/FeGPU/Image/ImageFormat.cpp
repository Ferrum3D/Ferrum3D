#include <FeGPU/Image/ImageFormat.h>

namespace FE::GPU
{
    StringSlice ToString(Format format)
    {
        switch (format)
        {
        case Format::None:
            return "None";
        case Format::R4G4_Unorm_Pack8:
            return "R4G4_Unorm_Pack8";
        case Format::R4G4B4A4_Unorm_Pack16:
            return "R4G4B4A4_Unorm_Pack16";
        case Format::B4G4R4A4_Unorm_Pack16:
            return "B4G4R4A4_Unorm_Pack16";
        case Format::R5G6B5_Unorm_Pack16:
            return "R5G6B5_Unorm_Pack16";
        case Format::B5G6R5_Unorm_Pack16:
            return "B5G6R5_Unorm_Pack16";
        case Format::R5G5B5A1_Unorm_Pack16:
            return "R5G5B5A1_Unorm_Pack16";
        case Format::B5G5R5A1_Unorm_Pack16:
            return "B5G5R5A1_Unorm_Pack16";
        case Format::A1R5G5B5_Unorm_Pack16:
            return "A1R5G5B5_Unorm_Pack16";
        case Format::R8_Unorm:
            return "R8_Unorm";
        case Format::R8_Snorm:
            return "R8_Snorm";
        case Format::R8_UScaled:
            return "R8_UScaled";
        case Format::R8_SScaled:
            return "R8_SScaled";
        case Format::R8_UInt:
            return "R8_UInt";
        case Format::R8_SInt:
            return "R8_SInt";
        case Format::R8_SRGB:
            return "R8_SRGB";
        case Format::R8G8_Unorm:
            return "R8G8_Unorm";
        case Format::R8G8_Snorm:
            return "R8G8_Snorm";
        case Format::R8G8_UScaled:
            return "R8G8_UScaled";
        case Format::R8G8_SScaled:
            return "R8G8_SScaled";
        case Format::R8G8_UInt:
            return "R8G8_UInt";
        case Format::R8G8_SInt:
            return "R8G8_SInt";
        case Format::R8G8_SRGB:
            return "R8G8_SRGB";
        case Format::R8G8B8_Unorm:
            return "R8G8B8_Unorm";
        case Format::R8G8B8_Snorm:
            return "R8G8B8_Snorm";
        case Format::R8G8B8_UScaled:
            return "R8G8B8_UScaled";
        case Format::R8G8B8_SScaled:
            return "R8G8B8_SScaled";
        case Format::R8G8B8_UInt:
            return "R8G8B8_UInt";
        case Format::R8G8B8_SInt:
            return "R8G8B8_SInt";
        case Format::R8G8B8_SRGB:
            return "R8G8B8_SRGB";
        case Format::B8G8R8_Unorm:
            return "B8G8R8_Unorm";
        case Format::B8G8R8_Snorm:
            return "B8G8R8_Snorm";
        case Format::B8G8R8_UScaled:
            return "B8G8R8_UScaled";
        case Format::B8G8R8_SScaled:
            return "B8G8R8_SScaled";
        case Format::B8G8R8_UInt:
            return "B8G8R8_UInt";
        case Format::B8G8R8_SInt:
            return "B8G8R8_SInt";
        case Format::B8G8R8_SRGB:
            return "B8G8R8_SRGB";
        case Format::R8G8B8A8_Unorm:
            return "R8G8B8A8_Unorm";
        case Format::R8G8B8A8_Snorm:
            return "R8G8B8A8_Snorm";
        case Format::R8G8B8A8_UScaled:
            return "R8G8B8A8_UScaled";
        case Format::R8G8B8A8_SScaled:
            return "R8G8B8A8_SScaled";
        case Format::R8G8B8A8_UInt:
            return "R8G8B8A8_UInt";
        case Format::R8G8B8A8_SInt:
            return "R8G8B8A8_SInt";
        case Format::R8G8B8A8_SRGB:
            return "R8G8B8A8_SRGB";
        case Format::B8G8R8A8_Unorm:
            return "B8G8R8A8_Unorm";
        case Format::B8G8R8A8_Snorm:
            return "B8G8R8A8_Snorm";
        case Format::B8G8R8A8_UScaled:
            return "B8G8R8A8_UScaled";
        case Format::B8G8R8A8_SScaled:
            return "B8G8R8A8_SScaled";
        case Format::B8G8R8A8_UInt:
            return "B8G8R8A8_UInt";
        case Format::B8G8R8A8_SInt:
            return "B8G8R8A8_SInt";
        case Format::B8G8R8A8_SRGB:
            return "B8G8R8A8_SRGB";
        case Format::A8B8G8R8_Unorm_Pack32:
            return "A8B8G8R8_Unorm_Pack32";
        case Format::A8B8G8R8_Snorm_Pack32:
            return "A8B8G8R8_Snorm_Pack32";
        case Format::A8B8G8R8_UScaled_Pack32:
            return "A8B8G8R8_UScaled_Pack32";
        case Format::A8B8G8R8_SScaled_Pack32:
            return "A8B8G8R8_SScaled_Pack32";
        case Format::A8B8G8R8_UInt_Pack32:
            return "A8B8G8R8_UInt_Pack32";
        case Format::A8B8G8R8_SInt_Pack32:
            return "A8B8G8R8_SInt_Pack32";
        case Format::A8B8G8R8_SRGB_Pack32:
            return "A8B8G8R8_SRGB_Pack32";
        case Format::A2R10G10B10_Unorm_Pack32:
            return "A2R10G10B10_Unorm_Pack32";
        case Format::A2R10G10B10_Snorm_Pack32:
            return "A2R10G10B10_Snorm_Pack32";
        case Format::A2R10G10B10_UScaled_Pack32:
            return "A2R10G10B10_UScaled_Pack32";
        case Format::A2R10G10B10_SScaled_Pack32:
            return "A2R10G10B10_SScaled_Pack32";
        case Format::A2R10G10B10_UInt_Pack32:
            return "A2R10G10B10_UInt_Pack32";
        case Format::A2R10G10B10_SInt_Pack32:
            return "A2R10G10B10_SInt_Pack32";
        case Format::A2B10G10R10_Unorm_Pack32:
            return "A2B10G10R10_Unorm_Pack32";
        case Format::A2B10G10R10_Snorm_Pack32:
            return "A2B10G10R10_Snorm_Pack32";
        case Format::A2B10G10R10_UScaled_Pack32:
            return "A2B10G10R10_UScaled_Pack32";
        case Format::A2B10G10R10_SScaled_Pack32:
            return "A2B10G10R10_SScaled_Pack32";
        case Format::A2B10G10R10_UInt_Pack32:
            return "A2B10G10R10_UInt_Pack32";
        case Format::A2B10G10R10_SInt_Pack32:
            return "A2B10G10R10_SInt_Pack32";
        case Format::R16_Unorm:
            return "R16_Unorm";
        case Format::R16_Snorm:
            return "R16_Snorm";
        case Format::R16_UScaled:
            return "R16_UScaled";
        case Format::R16_SScaled:
            return "R16_SScaled";
        case Format::R16_UInt:
            return "R16_UInt";
        case Format::R16_SInt:
            return "R16_SInt";
        case Format::R16_SFloat:
            return "R16_SFloat";
        case Format::R16G16_Unorm:
            return "R16G16_Unorm";
        case Format::R16G16_Snorm:
            return "R16G16_Snorm";
        case Format::R16G16_UScaled:
            return "R16G16_UScaled";
        case Format::R16G16_SScaled:
            return "R16G16_SScaled";
        case Format::R16G16_UInt:
            return "R16G16_UInt";
        case Format::R16G16_SInt:
            return "R16G16_SInt";
        case Format::R16G16_SFloat:
            return "R16G16_SFloat";
        case Format::R16G16B16_Unorm:
            return "R16G16B16_Unorm";
        case Format::R16G16B16_Snorm:
            return "R16G16B16_Snorm";
        case Format::R16G16B16_UScaled:
            return "R16G16B16_UScaled";
        case Format::R16G16B16_SScaled:
            return "R16G16B16_SScaled";
        case Format::R16G16B16_UInt:
            return "R16G16B16_UInt";
        case Format::R16G16B16_SInt:
            return "R16G16B16_SInt";
        case Format::R16G16B16_SFloat:
            return "R16G16B16_SFloat";
        case Format::R16G16B16A16_Unorm:
            return "R16G16B16A16_Unorm";
        case Format::R16G16B16A16_Snorm:
            return "R16G16B16A16_Snorm";
        case Format::R16G16B16A16_UScaled:
            return "R16G16B16A16_UScaled";
        case Format::R16G16B16A16_SScaled:
            return "R16G16B16A16_SScaled";
        case Format::R16G16B16A16_UInt:
            return "R16G16B16A16_UInt";
        case Format::R16G16B16A16_SInt:
            return "R16G16B16A16_SInt";
        case Format::R16G16B16A16_SFloat:
            return "R16G16B16A16_SFloat";
        case Format::R32_UInt:
            return "R32_UInt";
        case Format::R32_SInt:
            return "R32_SInt";
        case Format::R32_SFloat:
            return "R32_SFloat";
        case Format::R32G32_UInt:
            return "R32G32_UInt";
        case Format::R32G32_SInt:
            return "R32G32_SInt";
        case Format::R32G32_SFloat:
            return "R32G32_SFloat";
        case Format::R32G32B32_UInt:
            return "R32G32B32_UInt";
        case Format::R32G32B32_SInt:
            return "R32G32B32_SInt";
        case Format::R32G32B32_SFloat:
            return "R32G32B32_SFloat";
        case Format::R32G32B32A32_UInt:
            return "R32G32B32A32_UInt";
        case Format::R32G32B32A32_SInt:
            return "R32G32B32A32_SInt";
        case Format::R32G32B32A32_SFloat:
            return "R32G32B32A32_SFloat";
        case Format::R64_UInt:
            return "R64_UInt";
        case Format::R64_SInt:
            return "R64_SInt";
        case Format::R64_SFloat:
            return "R64_SFloat";
        case Format::R64G64_UInt:
            return "R64G64_UInt";
        case Format::R64G64_SInt:
            return "R64G64_SInt";
        case Format::R64G64_SFloat:
            return "R64G64_SFloat";
        case Format::R64G64B64_UInt:
            return "R64G64B64_UInt";
        case Format::R64G64B64_SInt:
            return "R64G64B64_SInt";
        case Format::R64G64B64_SFloat:
            return "R64G64B64_SFloat";
        case Format::R64G64B64A64_UInt:
            return "R64G64B64A64_UInt";
        case Format::R64G64B64A64_SInt:
            return "R64G64B64A64_SInt";
        case Format::R64G64B64A64_SFloat:
            return "R64G64B64A64_SFloat";
        case Format::B10G11R11_UFloat_Pack32:
            return "B10G11R11_UFloat_Pack32";
        case Format::E5B9G9R9_UFloat_Pack32:
            return "E5B9G9R9_UFloat_Pack32";
        case Format::D16_Unorm:
            return "D16_Unorm";
        case Format::X8_D24_Unorm_Pack32:
            return "X8_D24_Unorm_Pack32";
        case Format::D32_SFloat:
            return "D32_SFloat";
        case Format::S8_UInt:
            return "S8_UInt";
        case Format::D16_Unorm_S8_UInt:
            return "D16_Unorm_S8_UInt";
        case Format::D24_Unorm_S8_UInt:
            return "D24_Unorm_S8_UInt";
        case Format::D32_SFloat_S8_UInt:
            return "D32_SFloat_S8_UInt";
        case Format::BC1_RGB_Unorm_Block:
            return "BC1_RGB_Unorm_Block";
        case Format::BC1_RGB_SRGB_Block:
            return "BC1_RGB_SRGB_Block";
        case Format::BC1_RGBA_Unorm_Block:
            return "BC1_RGBA_Unorm_Block";
        case Format::BC1_RGBA_SRGB_Block:
            return "BC1_RGBA_SRGB_Block";
        case Format::BC2_Unorm_Block:
            return "BC2_Unorm_Block";
        case Format::BC2_SRGB_Block:
            return "BC2_SRGB_Block";
        case Format::BC3_Unorm_Block:
            return "BC3_Unorm_Block";
        case Format::BC3_SRGB_Block:
            return "BC3_SRGB_Block";
        case Format::BC4_Unorm_Block:
            return "BC4_Unorm_Block";
        case Format::BC4_Snorm_Block:
            return "BC4_Snorm_Block";
        case Format::BC5_Unorm_Block:
            return "BC5_Unorm_Block";
        case Format::BC5_Snorm_Block:
            return "BC5_Snorm_Block";
        case Format::BC6H_UFloat_Block:
            return "BC6H_UFloat_Block";
        case Format::BC6H_SFloat_Block:
            return "BC6H_SFloat_Block";
        case Format::BC7_Unorm_Block:
            return "BC7_Unorm_Block";
        case Format::BC7_SRGB_Block:
            return "BC7_SRGB_Block";
        case Format::ETC2_R8G8B8_Unorm_Block:
            return "ETC2_R8G8B8_Unorm_Block";
        case Format::ETC2_R8G8B8_SRGB_Block:
            return "ETC2_R8G8B8_SRGB_Block";
        case Format::ETC2_R8G8B8A1_Unorm_Block:
            return "ETC2_R8G8B8A1_Unorm_Block";
        case Format::ETC2_R8G8B8A1_SRGB_Block:
            return "ETC2_R8G8B8A1_SRGB_Block";
        case Format::ETC2_R8G8B8A8_Unorm_Block:
            return "ETC2_R8G8B8A8_Unorm_Block";
        case Format::ETC2_R8G8B8A8_SRGB_Block:
            return "ETC2_R8G8B8A8_SRGB_Block";
        case Format::EAC_R11_Unorm_Block:
            return "EAC_R11_Unorm_Block";
        case Format::EAC_R11_Snorm_Block:
            return "EAC_R11_Snorm_Block";
        case Format::EAC_R11G11_Unorm_Block:
            return "EAC_R11G11_Unorm_Block";
        case Format::EAC_R11G11_Snorm_Block:
            return "EAC_R11G11_Snorm_Block";
        case Format::ASTC_4x4_Unorm_Block:
            return "ASTC_4x4_Unorm_Block";
        case Format::ASTC_4x4_SRGB_Block:
            return "ASTC_4x4_SRGB_Block";
        case Format::ASTC_5x4_Unorm_Block:
            return "ASTC_5x4_Unorm_Block";
        case Format::ASTC_5x4_SRGB_Block:
            return "ASTC_5x4_SRGB_Block";
        case Format::ASTC_5x5_Unorm_Block:
            return "ASTC_5x5_Unorm_Block";
        case Format::ASTC_5x5_SRGB_Block:
            return "ASTC_5x5_SRGB_Block";
        case Format::ASTC_6x5_Unorm_Block:
            return "ASTC_6x5_Unorm_Block";
        case Format::ASTC_6x5_SRGB_Block:
            return "ASTC_6x5_SRGB_Block";
        case Format::ASTC_6x6_Unorm_Block:
            return "ASTC_6x6_Unorm_Block";
        case Format::ASTC_6x6_SRGB_Block:
            return "ASTC_6x6_SRGB_Block";
        case Format::ASTC_8x5_Unorm_Block:
            return "ASTC_8x5_Unorm_Block";
        case Format::ASTC_8x5_SRGB_Block:
            return "ASTC_8x5_SRGB_Block";
        case Format::ASTC_8x6_Unorm_Block:
            return "ASTC_8x6_Unorm_Block";
        case Format::ASTC_8x6_SRGB_Block:
            return "ASTC_8x6_SRGB_Block";
        case Format::ASTC_8x8_Unorm_Block:
            return "ASTC_8x8_Unorm_Block";
        case Format::ASTC_8x8_SRGB_Block:
            return "ASTC_8x8_SRGB_Block";
        case Format::ASTC_10x5_Unorm_Block:
            return "ASTC_10x5_Unorm_Block";
        case Format::ASTC_10x5_SRGB_Block:
            return "ASTC_10x5_SRGB_Block";
        case Format::ASTC_10x6_Unorm_Block:
            return "ASTC_10x6_Unorm_Block";
        case Format::ASTC_10x6_SRGB_Block:
            return "ASTC_10x6_SRGB_Block";
        case Format::ASTC_10x8_Unorm_Block:
            return "ASTC_10x8_Unorm_Block";
        case Format::ASTC_10x8_SRGB_Block:
            return "ASTC_10x8_SRGB_Block";
        case Format::ASTC_10x10_Unorm_Block:
            return "ASTC_10x10_Unorm_Block";
        case Format::ASTC_10x10_SRGB_Block:
            return "ASTC_10x10_SRGB_Block";
        case Format::ASTC_12x10_Unorm_Block:
            return "ASTC_12x10_Unorm_Block";
        case Format::ASTC_12x10_SRGB_Block:
            return "ASTC_12x10_SRGB_Block";
        case Format::ASTC_12x12_Unorm_Block:
            return "ASTC_12x12_Unorm_Block";
        case Format::ASTC_12x12_SRGB_Block:
            return "ASTC_12x12_SRGB_Block";
        case Format::G8B8G8R8_422_Unorm:
            return "G8B8G8R8_422_Unorm";
        case Format::B8G8R8G8_422_Unorm:
            return "B8G8R8G8_422_Unorm";
        case Format::G8_B8_R8_3PLANE_420_Unorm:
            return "G8_B8_R8_3PLANE_420_Unorm";
        case Format::G8_B8R8_2PLANE_420_Unorm:
            return "G8_B8R8_2PLANE_420_Unorm";
        case Format::G8_B8_R8_3PLANE_422_Unorm:
            return "G8_B8_R8_3PLANE_422_Unorm";
        case Format::G8_B8R8_2PLANE_422_Unorm:
            return "G8_B8R8_2PLANE_422_Unorm";
        case Format::G8_B8_R8_3PLANE_444_Unorm:
            return "G8_B8_R8_3PLANE_444_Unorm";
        case Format::R10X6_Unorm_Pack16:
            return "R10X6_Unorm_Pack16";
        case Format::R10X6G10X6_Unorm_2Pack16:
            return "R10X6G10X6_Unorm_2Pack16";
        case Format::R10X6G10X6B10X6A10X6_Unorm_4Pack16:
            return "R10X6G10X6B10X6A10X6_Unorm_4Pack16";
        case Format::G10X6B10X6G10X6R10X6_422_Unorm_4Pack16:
            return "G10X6B10X6G10X6R10X6_422_Unorm_4Pack16";
        case Format::B10X6G10X6R10X6G10X6_422_Unorm_4Pack16:
            return "B10X6G10X6R10X6G10X6_422_Unorm_4Pack16";
        case Format::G10X6_B10X6_R10X6_3PLANE_420_Unorm_3Pack16:
            return "G10X6_B10X6_R10X6_3PLANE_420_Unorm_3Pack16";
        case Format::G10X6_B10X6R10X6_2PLANE_420_Unorm_3Pack16:
            return "G10X6_B10X6R10X6_2PLANE_420_Unorm_3Pack16";
        case Format::G10X6_B10X6_R10X6_3PLANE_422_Unorm_3Pack16:
            return "G10X6_B10X6_R10X6_3PLANE_422_Unorm_3Pack16";
        case Format::G10X6_B10X6R10X6_2PLANE_422_Unorm_3Pack16:
            return "G10X6_B10X6R10X6_2PLANE_422_Unorm_3Pack16";
        case Format::G10X6_B10X6_R10X6_3PLANE_444_Unorm_3Pack16:
            return "G10X6_B10X6_R10X6_3PLANE_444_Unorm_3Pack16";
        case Format::R12X4_Unorm_Pack16:
            return "R12X4_Unorm_Pack16";
        case Format::R12X4G12X4_Unorm_2Pack16:
            return "R12X4G12X4_Unorm_2Pack16";
        case Format::R12X4G12X4B12X4A12X4_Unorm_4Pack16:
            return "R12X4G12X4B12X4A12X4_Unorm_4Pack16";
        case Format::G12X4B12X4G12X4R12X4_422_Unorm_4Pack16:
            return "G12X4B12X4G12X4R12X4_422_Unorm_4Pack16";
        case Format::B12X4G12X4R12X4G12X4_422_Unorm_4Pack16:
            return "B12X4G12X4R12X4G12X4_422_Unorm_4Pack16";
        case Format::G12X4_B12X4_R12X4_3PLANE_420_Unorm_3Pack16:
            return "G12X4_B12X4_R12X4_3PLANE_420_Unorm_3Pack16";
        case Format::G12X4_B12X4R12X4_2PLANE_420_Unorm_3Pack16:
            return "G12X4_B12X4R12X4_2PLANE_420_Unorm_3Pack16";
        case Format::G12X4_B12X4_R12X4_3PLANE_422_Unorm_3Pack16:
            return "G12X4_B12X4_R12X4_3PLANE_422_Unorm_3Pack16";
        case Format::G12X4_B12X4R12X4_2PLANE_422_Unorm_3Pack16:
            return "G12X4_B12X4R12X4_2PLANE_422_Unorm_3Pack16";
        case Format::G12X4_B12X4_R12X4_3PLANE_444_Unorm_3Pack16:
            return "G12X4_B12X4_R12X4_3PLANE_444_Unorm_3Pack16";
        case Format::G16B16G16R16_422_Unorm:
            return "G16B16G16R16_422_Unorm";
        case Format::B16G16R16G16_422_Unorm:
            return "B16G16R16G16_422_Unorm";
        case Format::G16_B16_R16_3PLANE_420_Unorm:
            return "G16_B16_R16_3PLANE_420_Unorm";
        case Format::G16_B16R16_2PLANE_420_Unorm:
            return "G16_B16R16_2PLANE_420_Unorm";
        case Format::G16_B16_R16_3PLANE_422_Unorm:
            return "G16_B16_R16_3PLANE_422_Unorm";
        case Format::G16_B16R16_2PLANE_422_Unorm:
            return "G16_B16R16_2PLANE_422_Unorm";
        case Format::G16_B16_R16_3PLANE_444_Unorm:
            return "G16_B16_R16_3PLANE_444_Unorm";
        case Format::PVRTC1_2BPP_Unorm_Block_IMG:
            return "PVRTC1_2BPP_Unorm_Block_IMG";
        case Format::PVRTC1_4BPP_Unorm_Block_IMG:
            return "PVRTC1_4BPP_Unorm_Block_IMG";
        case Format::PVRTC2_2BPP_Unorm_Block_IMG:
            return "PVRTC2_2BPP_Unorm_Block_IMG";
        case Format::PVRTC2_4BPP_Unorm_Block_IMG:
            return "PVRTC2_4BPP_Unorm_Block_IMG";
        case Format::PVRTC1_2BPP_SRGB_Block_IMG:
            return "PVRTC1_2BPP_SRGB_Block_IMG";
        case Format::PVRTC1_4BPP_SRGB_Block_IMG:
            return "PVRTC1_4BPP_SRGB_Block_IMG";
        case Format::PVRTC2_2BPP_SRGB_Block_IMG:
            return "PVRTC2_2BPP_SRGB_Block_IMG";
        case Format::PVRTC2_4BPP_SRGB_Block_IMG:
            return "PVRTC2_4BPP_SRGB_Block_IMG";
        case Format::ASTC_4x4_SFloat_Block_EXT:
            return "ASTC_4x4_SFloat_Block_EXT";
        case Format::ASTC_5x4_SFloat_Block_EXT:
            return "ASTC_5x4_SFloat_Block_EXT";
        case Format::ASTC_5x5_SFloat_Block_EXT:
            return "ASTC_5x5_SFloat_Block_EXT";
        case Format::ASTC_6x5_SFloat_Block_EXT:
            return "ASTC_6x5_SFloat_Block_EXT";
        case Format::ASTC_6x6_SFloat_Block_EXT:
            return "ASTC_6x6_SFloat_Block_EXT";
        case Format::ASTC_8x5_SFloat_Block_EXT:
            return "ASTC_8x5_SFloat_Block_EXT";
        case Format::ASTC_8x6_SFloat_Block_EXT:
            return "ASTC_8x6_SFloat_Block_EXT";
        case Format::ASTC_8x8_SFloat_Block_EXT:
            return "ASTC_8x8_SFloat_Block_EXT";
        case Format::ASTC_10x5_SFloat_Block_EXT:
            return "ASTC_10x5_SFloat_Block_EXT";
        case Format::ASTC_10x6_SFloat_Block_EXT:
            return "ASTC_10x6_SFloat_Block_EXT";
        case Format::ASTC_10x8_SFloat_Block_EXT:
            return "ASTC_10x8_SFloat_Block_EXT";
        case Format::ASTC_10x10_SFloat_Block_EXT:
            return "ASTC_10x10_SFloat_Block_EXT";
        case Format::ASTC_12x10_SFloat_Block_EXT:
            return "ASTC_12x10_SFloat_Block_EXT";
        case Format::ASTC_12x12_SFloat_Block_EXT:
            return "ASTC_12x12_SFloat_Block_EXT";
        case Format::G8_B8R8_2PLANE_444_Unorm_EXT:
            return "G8_B8R8_2PLANE_444_Unorm_EXT";
        case Format::G10X6_B10X6R10X6_2PLANE_444_Unorm_3Pack16_EXT:
            return "G10X6_B10X6R10X6_2PLANE_444_Unorm_3Pack16_EXT";
        case Format::G12X4_B12X4R12X4_2PLANE_444_Unorm_3Pack16_EXT:
            return "G12X4_B12X4R12X4_2PLANE_444_Unorm_3Pack16_EXT";
        case Format::G16_B16R16_2PLANE_444_Unorm_EXT:
            return "G16_B16R16_2PLANE_444_Unorm_EXT";
        case Format::A4R4G4B4_Unorm_Pack16_EXT:
            return "A4R4G4B4_Unorm_Pack16_EXT";
        case Format::A4B4G4R4_Unorm_Pack16_EXT:
            return "A4B4G4R4_Unorm_Pack16_EXT";
        case Format::B10X6G10X6R10X6G10X6_422_Unorm_4Pack16_KHR:
            return "B10X6G10X6R10X6G10X6_422_Unorm_4Pack16_KHR";
        case Format::B12X4G12X4R12X4G12X4_422_Unorm_4Pack16_KHR:
            return "B12X4G12X4R12X4G12X4_422_Unorm_4Pack16_KHR";
        case Format::B16G16R16G16_422_Unorm_KHR:
            return "B16G16R16G16_422_Unorm_KHR";
        case Format::B8G8R8G8_422_Unorm_KHR:
            return "B8G8R8G8_422_Unorm_KHR";
        case Format::G10X6B10X6G10X6R10X6_422_Unorm_4Pack16_KHR:
            return "G10X6B10X6G10X6R10X6_422_Unorm_4Pack16_KHR";
        case Format::G10X6_B10X6R10X6_2PLANE_420_Unorm_3Pack16_KHR:
            return "G10X6_B10X6R10X6_2PLANE_420_Unorm_3Pack16_KHR";
        case Format::G10X6_B10X6R10X6_2PLANE_422_Unorm_3Pack16_KHR:
            return "G10X6_B10X6R10X6_2PLANE_422_Unorm_3Pack16_KHR";
        case Format::G10X6_B10X6_R10X6_3PLANE_420_Unorm_3Pack16_KHR:
            return "G10X6_B10X6_R10X6_3PLANE_420_Unorm_3Pack16_KHR";
        case Format::G10X6_B10X6_R10X6_3PLANE_422_Unorm_3Pack16_KHR:
            return "G10X6_B10X6_R10X6_3PLANE_422_Unorm_3Pack16_KHR";
        case Format::G10X6_B10X6_R10X6_3PLANE_444_Unorm_3Pack16_KHR:
            return "G10X6_B10X6_R10X6_3PLANE_444_Unorm_3Pack16_KHR";
        case Format::G12X4B12X4G12X4R12X4_422_Unorm_4Pack16_KHR:
            return "G12X4B12X4G12X4R12X4_422_Unorm_4Pack16_KHR";
        case Format::G12X4_B12X4R12X4_2PLANE_420_Unorm_3Pack16_KHR:
            return "G12X4_B12X4R12X4_2PLANE_420_Unorm_3Pack16_KHR";
        case Format::G12X4_B12X4R12X4_2PLANE_422_Unorm_3Pack16_KHR:
            return "G12X4_B12X4R12X4_2PLANE_422_Unorm_3Pack16_KHR";
        case Format::G12X4_B12X4_R12X4_3PLANE_420_Unorm_3Pack16_KHR:
            return "G12X4_B12X4_R12X4_3PLANE_420_Unorm_3Pack16_KHR";
        case Format::G12X4_B12X4_R12X4_3PLANE_422_Unorm_3Pack16_KHR:
            return "G12X4_B12X4_R12X4_3PLANE_422_Unorm_3Pack16_KHR";
        case Format::G12X4_B12X4_R12X4_3PLANE_444_Unorm_3Pack16_KHR:
            return "G12X4_B12X4_R12X4_3PLANE_444_Unorm_3Pack16_KHR";
        case Format::G16B16G16R16_422_Unorm_KHR:
            return "G16B16G16R16_422_Unorm_KHR";
        case Format::G16_B16R16_2PLANE_420_Unorm_KHR:
            return "G16_B16R16_2PLANE_420_Unorm_KHR";
        case Format::G16_B16R16_2PLANE_422_Unorm_KHR:
            return "G16_B16R16_2PLANE_422_Unorm_KHR";
        case Format::G16_B16_R16_3PLANE_420_Unorm_KHR:
            return "G16_B16_R16_3PLANE_420_Unorm_KHR";
        case Format::G16_B16_R16_3PLANE_422_Unorm_KHR:
            return "G16_B16_R16_3PLANE_422_Unorm_KHR";
        case Format::G16_B16_R16_3PLANE_444_Unorm_KHR:
            return "G16_B16_R16_3PLANE_444_Unorm_KHR";
        case Format::G8B8G8R8_422_Unorm_KHR:
            return "G8B8G8R8_422_Unorm_KHR";
        case Format::G8_B8R8_2PLANE_420_Unorm_KHR:
            return "G8_B8R8_2PLANE_420_Unorm_KHR";
        case Format::G8_B8R8_2PLANE_422_Unorm_KHR:
            return "G8_B8R8_2PLANE_422_Unorm_KHR";
        case Format::G8_B8_R8_3PLANE_420_Unorm_KHR:
            return "G8_B8_R8_3PLANE_420_Unorm_KHR";
        case Format::G8_B8_R8_3PLANE_422_Unorm_KHR:
            return "G8_B8_R8_3PLANE_422_Unorm_KHR";
        case Format::G8_B8_R8_3PLANE_444_Unorm_KHR:
            return "G8_B8_R8_3PLANE_444_Unorm_KHR";
        case Format::R10X6G10X6B10X6A10X6_Unorm_4Pack16_KHR:
            return "R10X6G10X6B10X6A10X6_Unorm_4Pack16_KHR";
        case Format::R10X6G10X6_Unorm_2Pack16_KHR:
            return "R10X6G10X6_Unorm_2Pack16_KHR";
        case Format::R10X6_Unorm_Pack16_KHR:
            return "R10X6_Unorm_Pack16_KHR";
        case Format::R12X4G12X4B12X4A12X4_Unorm_4Pack16_KHR:
            return "R12X4G12X4B12X4A12X4_Unorm_4Pack16_KHR";
        case Format::R12X4G12X4_Unorm_2Pack16_KHR:
            return "R12X4G12X4_Unorm_2Pack16_KHR";
        case Format::R12X4_Unorm_Pack16_KHR:
            return "R12X4_Unorm_Pack16_KHR";
        default:
            return "{Error Format}";
        }
    }
} // namespace FE::GPU
